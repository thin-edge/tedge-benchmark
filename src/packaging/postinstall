#!/bin/sh

use_systemctl="True"
if ! command -V systemctl >/dev/null 2>&1; then
  use_systemctl="False"
fi

cleanInstall() {
    printf "\033[32m Post Install of a clean install\033[0m\n"

    if [ "$use_systemctl" = "True" ]; then
        printf "\033[32m Reload the service unit from disk\033[0m\n"
        systemctl daemon-reload ||:
        printf "\033[32m Unmask the service\033[0m\n"
        systemctl unmask tedge-benchmark.timer ||:
        printf "\033[32m Set the preset flag for the service unit\033[0m\n"
        systemctl preset tedge-benchmark.timer ||:
        printf "\033[32m Set the enabled flag for the service unit\033[0m\n"
        systemctl enable tedge-benchmark.timer ||:
		systemctl start tedge-benchmark.timer ||:
    fi
}

upgrade() {
    printf "\033[32m Post Install of an upgrade\033[0m\n"
	if [ "$use_systemctl" = "True" ]; then
		systemctl daemon-reload
	fi
}

# Step 2, check if this is a clean install or an upgrade
action="$1"
if  [ "$1" = "configure" ] && [ -z "$2" ]; then
	# Alpine linux does not pass args, and deb passes $1=configure
	action="install"
elif [ "$1" = "configure" ] && [ -n "$2" ]; then
    # deb passes $1=configure $2=<current version>
    action="upgrade"
fi

case "$action" in
	"1" | "install")
		cleanInstall
		;;
	"2" | "upgrade")
		printf "\033[32m Post Install of an upgrade\033[0m\n"
		upgrade
		;;
  	*)
		# $1 == version being installed
		printf "\033[32m Alpine\033[0m"
		;;
esac
